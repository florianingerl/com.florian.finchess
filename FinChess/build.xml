<?xml version="1.0" encoding = "UTF-8"?>

<!--basedir = "." bedeutet Verzeichnis, in dem auch build.xml steht, Ant benutzt es um relative Pfade zu vervollständigen -->

<project name="FinChess" default="shortjunittests" basedir=".">

	<!-- <property file = "filename"/> würde Properties von einer Properties Datei laden -->
	<property name="src" location="src" />
	<property name="output" location="bin" />
	<property name="doc" location="doc" />
	<property name="mainclass" value="UI.Main" />
	<property name="testreports" value="testreports" />

	<path id="libraries">
		<pathelement location="Raptor.jar" />
		<pathelement location="commons-lang-2.0.jar" />
		<pathelement location="log4j-1.2.17.jar" />
		<pathelement location="commons-logging-1.2.jar" />
		<pathelement location="commons-logging-1.2-javadoc.jar" />
		<pathelement location="junit-4.12.jar" />
		<pathelement location="hamcrest-core-1.3.jar" />
		<pathelement location="commons-io-2.5.jar" />
		<pathelement location="commons-math3-3.6.1/commons-math3-3.6.1.jar" />
	</path>

	<!--Target can noch Attribut if und unless haben, sodass das  das Target nur dann ausgeführt wird, wenn property gesetzt ist oder nicht-->
	<target name="run" depends="shortjunittests">
		<java classname="${mainclass}" fork="true">
			<classpath>
				<pathelement path="${output}" />
				<path refid="libraries" />
			</classpath>
			<arg file="portals_3_files_2014_kataropen_kramniksjugirov.pgn" />
		</java>

	</target>

	<target name="init">
		<mkdir dir="${output}" />
		<mkdir dir="${testreports}" />
	</target>

	<target name="compile" depends="init">
		<!-- Ohne debug="yes" kommen keine debug Meldungen -->
		<javac srcdir="${src}" destdir="${output}" debug="yes">
			<classpath refid="libraries" />
		</javac>
	</target>

	<target name="javadoc" depends="compile">
		<mkdir dir="${doc}" />

		<javadoc destdir="${doc}">
			<fileset dir="${src}">
				<!-- *sucht nach keinem oder mehreren Zeichen, ** such nach keinem oder mehreren Verzeichnissen -->
				<include name="**/*.java" />
				<exclude name="**/*Test*" />
			</fileset>
			<classpath refid="libraries" />

		</javadoc>

	</target>

	<target name="clean">
		<delete dir="${doc}" />
		<delete dir="${output}" />
		<delete dir="${testreports}" />
	</target>

	<target name="jar" depends="compile">

		<jar destfile="Bittboard.jar" basedir="${output}">
			<manifest>
				<attribute name="Main-Class" value="${mainclass}" />
			</manifest>
		</jar>

	</target>

	<target name="junittests" depends="compile">
		<junit printsummary="on" fork="true" haltonfailure="yes">
			<classpath>
				<pathelement path="${output}" />
				<path refid="libraries" />

			</classpath>

			<formatter type="plain" />

			<batchtest todir="testreports">
				<fileset dir="${src}">
					<include name="**/*Test*.java" />
					<exclude name="**/NeuralNetTester.java" />
				</fileset>
			</batchtest>

		</junit>

	</target>


	<target name="shortjunittests" depends="compile">
		<junit printsummary="on" fork="true" haltonfailure="yes">
			<classpath>
				<pathelement path="${output}" />
				<path refid="libraries" />

			</classpath>

			<formatter type="plain" />

			<batchtest todir="testreports">
				<fileset dir="${src}">
					<include name="**/*Test*.java" />
					<exclude name="**/BasicEngineTest.java" />
					<exclude name="**/NeuralNetTester.java" />
				</fileset>
			</batchtest>

		</junit>

	</target>

</project>
